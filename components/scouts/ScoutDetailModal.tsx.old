"use client";

import React from "react";
import * as Dialog from "@radix-ui/react-dialog";
import { X } from "lucide-react";
import { Button } from "@/components/ui/Button";
import { formatDate } from "@/lib/utils";
import { Scout } from "@/types";

interface ScoutDetailModalProps {
  open: boolean;
  onClose: () => void;
  scout: Scout | null;
}

export default function ScoutDetailModal({ open, onClose, scout }: ScoutDetailModalProps) {
  // Don't render anything if no scout is selected
  if (!scout) return null;
  
  return (
    <Dialog.Root open={open} onOpenChange={(open) => !open && onClose()}>
      <Dialog.Portal>
        <Dialog.Overlay className="fixed inset-0 z-50 bg-black/50 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0" />
        <Dialog.Content className="fixed left-[50%] top-[50%] z-50 max-h-[85vh] w-[90vw] max-w-[500px] translate-x-[-50%] translate-y-[-50%] rounded-md border bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%]">
          <Dialog.Title className="text-xl font-semibold leading-none tracking-tight">
            {scout.name}&apos;s Profile
          </Dialog.Title>
          
          <div className="py-4 mt-4">
            <div className="space-y-4">
              <h3 className="text-lg font-medium">Basic Information</h3>
              <div className="grid grid-cols-2 gap-2">
                <div><span className="font-medium">Name:</span> {scout.name}</div>
                <div><span className="font-medium">Age:</span> {scout.age}</div>
                <div><span className="font-medium">Group:</span> {scout.groupName}</div>
                <div><span className="font-medium">Rank:</span> {scout.rank}</div>
                {scout.joinedDate && (
                  <div><span className="font-medium">Joined:</span> {formatDate(scout.joinedDate, "MMM dd, yyyy")}</div>
                )}
              </div>
            </div>
          </div>
          
          <div className="mt-5 flex justify-end">
            <Dialog.Close asChild>
              <Button variant="outline">Close</Button>
            </Dialog.Close>
          </div>
          
          <Dialog.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
            <X className="h-4 w-4" />
            <span className="sr-only">Close</span>
          </Dialog.Close>
        </Dialog.Content>
      </Dialog.Portal>
    </Dialog.Root>
  );
}
